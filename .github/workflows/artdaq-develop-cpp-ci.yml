name: build-develop

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  schedule:
    - cron: "0 7 * * *"

  workflow_dispatch:


jobs:
  build_against_dev_release:
    name: build_against_dev
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: "eflumerf/otsdaq-base:latest"
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    
    - name: setup dev area
      run: |
          cd /opt/otsdaq
          source /opt/otsdaq/products/setup || true
          source /opt/otsdaq/setup_ots.sh || true
          
    - name: checkout package for CI
      uses: actions/checkout@v3
      with:
        path: ${{ github.repository }}
    
    - name: setup build env, build the repo against the development release
      #- name: setup build env, build and lint the repo against the development release
      run: |
          export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
          cd /opt/otsdaq
          source setup_ots.sh || true
          cp -pr $GITHUB_WORKSPACE/art-daq/$REPO srcs
          echo "Starting build"
          mrb b 2>&1 | tee $GITHUB_WORKSPACE/build.log


    - name: upload build log file
      uses: actions/upload-artifact@v3
      with:
        name: build_log
        path: ${{ github.workspace }}/build.log

          #- name: upload linter output file
          #uses: actions/upload-artifact@v3
          #with:
          #name: linting_log
          #path: ${{ github.workspace }}/dev-${{ matrix.os_name }}/log/linting*

          #- name: upload unittest output file
          #uses: actions/upload-artifact@v2
          #with:
          #name: unit_tests_log
          #path: ${{ github.workspace }}/dev-${{ matrix.os_name }}/log/unit_tests*
