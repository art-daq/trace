#   This file (trace.sh.functions) was created by Ron Rechenmacher <ron@fnal.gov> on
#   Jul 15, 2003. "TERMS AND CONDITIONS" governing this file are in the README
#   or COPYING file. If you do not have such a file, one can be obtained by
#   contacting Ron or Fermi Lab in Batavia IL, 60510, phone: 630-840-3000.
#   $RCSfile: trace.sh.functions,v $
#   $Revision: 1.18 $
#   $Date: 2014-03-14 16:41:23 $

tcntl()   { trace_cntl "$@"; }
tshow()   { trace_cntl show "$@" | less; }
tinfo()   { trace_cntl info "$@"; }   # the linux getopt by default will process all
ttids()   { trace_cntl tids "$@"; }   #    args so -f<file> can be used. (Darwin's getopt
tlvls()   { trace_cntl tids "$@"; }   #    args so -f<file> can be used. (Darwin's getopt
tlvlM()   { trace_cntl lvlmskM "$@"; }  #  does not :(
tlvlS()   { trace_cntl lvlmskS "$@"; }
tlvlT()   { trace_cntl lvlmskT "$@"; }
tlvlMg()   { trace_cntl lvlmskMg "$@"; }
tlvlSg()   { trace_cntl lvlmskSg "$@"; }
tlvlTg()   { trace_cntl lvlmskTg "$@"; }
tmode()   { trace_cntl mode  "$@"; }
tmodeM()  { trace_cntl modeM "$@"; }
tmodeS()  { trace_cntl modeS "$@"; }
tfreeze() { trace_cntl modeM 0; }
treset()  { trace_cntl reset; }
tdelta()  { trace_delta.pl "$@" | less; }  # ex. tshow | grep xxx | tdelta

bitN_to_mask()
{   spec=$*
    prev=
    while [ "x$spec" != "x$prev" ];do
        prev=$spec
        spec=`echo $spec | sed 's/\([0-9]\) \([0-9]\)/\1,\2/g'` # put , between spaced nums
    done
    spec=`echo $spec | sed 's/ //g'`  # git rid of spaces (ie. "4- 7" -> "4-7"
    rr=
    for xx in `echo $spec | sed 's/,/ /g'`;do
        start=`expr "$xx" : '\([^-]*\)'`
        end=`expr "$xx" : '[^-]*-\(.*\)'`; test -z "$end" && end=$start
        test $start -le $end && inc=1 || inc=-1
        for ii in `seq $start $inc $end`; do rr="${rr:+$rr }$ii"; done
    done
    echo $rr|awk '{for(i=1;i<NF+1;++i)m=or(m,lshift(1,$i));printf"0x%x\n",m;}'
}

tonM()     { trace_cntl lvlset `bitN_to_mask $*` 0 0; trace_cntl modeM 1; }
toffM()    { trace_cntl lvlclr `bitN_to_mask $*` 0 0; }
tonS()     { trace_cntl lvlset 0 `bitN_to_mask $*` 0; trace_cntl modeS 1; }
toffS()    { trace_cntl lvlclr 0 `bitN_to_mask $*` 0; }
