---
Language:        Cpp
# BasedOnStyle:  Google
AccessModifierOffset: -4
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
#AlignConsecutiveBitFields: true
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: true
AlignEscapedNewlines: Left
AlignOperands:   true
AlignTrailingComments: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Always    # was true (in pre-version-10 of clang-format) DOESN'T SEEM TO APPLY TO MACROS :(
AllowShortCaseLabelsOnASingleLine: true  # false
#AllowShortEnumsOnASingleLine: true  # needs version 12
AllowShortFunctionsOnASingleLine: All
AllowShortIfStatementsOnASingleLine: Always  # was true (in older version of clang-format
AllowShortLoopsOnASingleLine: true
# deprecated AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false   # true
AlwaysBreakTemplateDeclarations: true
BinPackArguments: true
BinPackParameters: true
# BitFieldColonSpacing: None     BitFieldColonSpacing needs version 12
BreakBeforeBraces: WebKit  #  Attach   # Custom    # Linux # Custom          # Linux   Custom means use BraceWrapping (next)
BraceWrapping:
  AfterCaseLabel:  false
  AfterClass:      true
  AfterControlStatement: Never # false # the linux kernel has false; clang default seems to be true
  AfterEnum:       false       # was true
  AfterFunction:   true
  AfterNamespace:  false
  AfterObjCDeclaration: false
  AfterStruct:     true
  AfterUnion:      true
  AfterExternBlock: false
  BeforeCatch:     true
  BeforeElse:      false       # was true
  #  BeforeWhile:     false   needs version 12
  IndentBraces:    false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: true
BreakBeforeBinaryOperators: None
#BreakBeforeBraces: WebKit
BreakBeforeInheritanceComma: false
BreakBeforeTernaryOperators: true
BreakConstructorInitializersBeforeComma: true
BreakConstructorInitializers: BeforeColon
BreakAfterJavaFieldAnnotations: false
BreakStringLiterals: true # false # true  - no change
ColumnLimit:     0
CommentPragmas:  '^\\.+'
CompactNamespaces: true # false
ConstructorInitializerAllOnOneLineOrOnePerLine: true
ConstructorInitializerIndentWidth: 4      # probably should be 8
ContinuationIndentWidth: 4                # probably should be 8
Cpp11BracedListStyle: true
DerivePointerAlignment: true
DisableFormat:   false
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
ForEachMacros:   
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
IncludeCategories: 
  - Regex:           '^<.*\.h>'
    Priority:        1
  - Regex:           '^<.*'
    Priority:        2
  - Regex:           '.*'
    Priority:        3
IncludeIsMainRegex: '([-_](test|unittest))?$'
IndentCaseLabels: false      # was true
IndentPPDirectives: AfterHash
IndentWidth:     4                  # UseTab??? (below)
IndentWrappedFunctionNames: false
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
KeepEmptyLinesAtTheStartOfBlocks: false
MacroBlockBegin: ''
MacroBlockEnd:   ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
ObjCBlockIndentWidth: 2
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: false
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200
PointerAlignment: Right   #  Left  Right b/c * does go with variable
ReflowComments:  false      # true   false because comments can be manually aligned
SortIncludes:    false
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: false    # true
SpaceBeforeParens: ControlStatements
SpaceBeforeSquareBrackets: false    # new circa version 10
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles:  false
SpacesInContainerLiterals: true
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard:        Auto
TabWidth:        4
UseTab:          ForContinuationAndIndentation # AlignWithSpaces (circa Version 12) # ForIndentation # AlignWithSpaces  # was ForContinuationAndIndentation
# WhitespaceSensitiveMacros: [ 'TRACE_ATOMIC_INIT', 'TRACE_VA_LIST_INIT' ] # circa version 12
...

