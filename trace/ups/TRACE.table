#   $RCSfile: TRACE.table,v $
#   $Revision: 1.8 $
#   $Date: 2015-02-25 19:53:24 $
FILE = TABLE
Product=TRACE

GROUP:

Flavor=ANY
Qualifiers=

  Action=DefineFQ
    envSet (${UPS_PROD_NAME_UC}_FQ, ${UPS_PROD_FLAVOR})

  Action = ExtraSetup

# non-conforming e5 configuration
Flavor=ANY
Qualifiers=e5

  Action=DefineFQ
    envSet (${UPS_PROD_NAME_UC}_FQ, ${UPS_PROD_FLAVOR})

  Action = ExtraSetup

Flavor=ANY
Qualifiers=e6

  Action=DefineFQ
    envSet (${UPS_PROD_NAME_UC}_FQ, ${UPS_PROD_FLAVOR}-e6)

  Action = ExtraSetup
    setupRequired( gcc v4_9_1 )

COMMON:
   ACTION = setup
      # setupEnv puts SETUP_${UPS_PROD_NAME_UC} env var in env so product can be unsetup
      setupenv()
      proddir()
      ExeActionRequired(DefineFQ)
      envSet (${UPS_PROD_NAME_UC}_FQ_DIR, ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ})
      exeActionRequired("setup__")
      envPrepend( PATH, ${UPS_PROD_DIR}/script )
      # requirements
      exeActionRequired(ExtraSetup)
      # cleanup
      envUnSet( ${UPS_PROD_NAME_UC}_FQ )

   ACTION = setup__

	prodDir( _INC, include )
	prodDir( _LIB, ${${UPS_PROD_NAME_UC}_FQ}/lib )
	prodDir( _BIN, ${${UPS_PROD_NAME_UC}_FQ}/bin )

        if    ( test `expr "${${UPS_PROD_NAME_UC}_BIN}" : '.*[/.]/'` -eq 0 -a -d "${${UPS_PROD_NAME_UC}_BIN}" )
            pathPrepend(PATH, ${${UPS_PROD_NAME_UC}_BIN} )
            # older versions of ups (v4_7_4a) have bug that requires else() clause
	else  ()
            execute( true, NO_UPS_ENV )
        endif ( test `expr "${${UPS_PROD_NAME_UC}_BIN}" : '.*[/.]/'` -eq 0 -a -d "${${UPS_PROD_NAME_UC}_BIN}" )

	if ( test `uname` = "Darwin" )
          envPrepend(DYLD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})
	else()
          envPrepend(LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})
	endif ( test `uname` = "Darwin" )

	envSet( ${UPS_PROD_NAME_UC}_VERSION, ${UPS_PROD_VERSION} )

	#execute( test $?shell \!= 1 && . ${UPS_PROD_DIR}/script/trace.sh.functions, NO_UPS_ENV )

	addAlias( tcntl,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl %s )
	addAlias( tshow,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl show %s | less )
	addAlias( tinfo,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl info %s )
	addAlias( ttids,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl tids %s )
	addAlias( tlvls,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl tids %s )
	addAlias( tlvlM,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlmskM %s )
	addAlias( tlvlS,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlmskS %s )
	addAlias( tlvlT,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlmskT %s )
	addAlias( tlvlMg,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlmskMg %s )
	addAlias( tlvlSg,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlmskSg %s )
	addAlias( tlvlTg,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlmskTg %s )
	addAlias( tmode,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl mode %s )
	addAlias( tmodeM,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl modeM %s )
	addAlias( tmodeS,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl modeS %s )
	addAlias( tfreeze, ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl modeM 0 )
	addAlias( treset,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl reset )
	addAlias( tdelta,  ${UPS_PROD_DIR}/script/trace_delta.pl %s | less )
	addAlias( tenv,    ${UPS_PROD_DIR}/script/trace_envvars.sh %s )
	addAlias( tonM,    ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlset  `bitN_to_mask %s` 0 0; trace_cntl modeM 1 )
	addAlias( tonS,    ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlset  0 `bitN_to_mask %s` 0; trace_cntl modeS 1 )
	addAlias( tonT,    ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlset  0 0 `bitN_to_mask %s` )
	addAlias( toffM,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlclr  `bitN_to_mask %s` 0 0 )
	addAlias( toffS,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlclr  0 `bitN_to_mask %s` 0 )
	addAlias( toffT,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlclr  0 0 `bitN_to_mask %s` )
	addAlias( tonMg,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlsetg `bitN_to_mask %s` 0 0; trace_cntl modeM 1 )
	addAlias( tonSg,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlsetg 0 `bitN_to_mask %s` 0; trace_cntl modeS 1 )
	addAlias( tonTg,   ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlsetg 0 0 `bitN_to_mask %s` )
	addAlias( toffMg,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlclrg `bitN_to_mask %s` 0 0 )
	addAlias( toffSg,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlclrg 0 `bitN_to_mask %s` 0 )
	addAlias( toffTg,  ${${UPS_PROD_NAME_UC}_BIN}/trace_cntl lvlclrg 0 0 `bitN_to_mask %s` )

	# ADD common env vars here
END:
